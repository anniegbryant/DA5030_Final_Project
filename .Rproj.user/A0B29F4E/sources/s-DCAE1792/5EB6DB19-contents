---
title: "Model Deployment Prep"
output: 
  html_document:
    css: "../my_style.css"
---

<script src="../hideOutput.js"></script>

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

The following packages are required for analysis and visualization in this page:

```{r}
# General data wrangling
library(tidyverse)
library(DT)
library(readxl)

# Visualization
library(plotly)
library(colorRamps)
library(RColorBrewer)
library(colorspace)
library(ggseg)
library(forcats)
library(igraph)

# Modeling
library(glmnet)
library(caret)
library(ranger)

# Ensemble building
library(caretEnsemble)

# Correlations
library(Hmisc)
```


Load the models constructed in Modeling:
```{r}
load("../Model_Results.RData")
load("../Variable_Importance.RData")
```


Combine original train + original test into full df:
```{r}
original.full <- plyr::rbind.fill(original.train, original.test)
```


Pivot the original ROI configuration dataset from wide to long (preparation for correlation matrix), omitting age at baseline and sex:

```{r}
# Pivot wide --> long
original.roi.long <- original.full %>%
  select(-Age_Baseline, -Sex_Male) %>%
  pivot_longer(cols=c(-CDRSB), names_to="ROI", values_to="SUVR_Change")
```



Calculate pairwise ROI tau-PET SUVR correlations using `rcorr` function from the `Hmisc` package:
```{r}
# Convert tau-PET regional SUVR change to a matrix
original.roi.mat <- original.full %>%
  select(-Age_Baseline, -Sex_Male, -CDRSB) %>%
  as.matrix()

# Use rcorr from Hmisc to calculate Pearson correlation coefficients ($r) and p-value ($P)
original.roi.corr <- rcorr(original.roi.mat)
original.roi.corr.coef <- original.roi.corr$r
original.roi.corr.p <- original.roi.corr$P
```


For visualization, it's easier to then convert this correlation matrix from wide to long. I'll utilize the `pivot_longer` function from the `tidyr` package to reshape the dataframes for the correlation coefficients and p-values.

```{r}
# Correlation coefficient (Pearson)
original.roi.corr.coef.long <- as.data.frame(original.roi.corr.coef) %>%
  # Cast rownames as a dataframe column
  rownames_to_column(var="ROI1") %>%
  # Pivot data wide --> long
  pivot_longer(cols=c(-ROI1), names_to="ROI2", values_to="Pearson_Corr") %>%
  # Omit correlations between the same ROI, which are always equal to 1
  filter(ROI1 != ROI2) %>%
  # Omit instances where the two ROIs are the same, just in different columns
  mutate(ROI12 = ifelse(ROI1<ROI2, paste(ROI1, ROI2, sep="_"),
                        paste(ROI2, ROI1, sep="_"))) %>%
  distinct(ROI12, .keep_all=T) %>%
  select(-ROI12)

# p-value for correlation coefficient
original.roi.corr.p.long <- as.data.frame(original.roi.corr.p) %>%
  # Cast rownames as a dataframe column
  rownames_to_column(var="ROI1") %>%
  # Pivot data wide --> long
  pivot_longer(cols=c(-ROI1), names_to="ROI2", values_to="p.val") %>%
  # Omit correlations between the same ROI, which are always equal to 1
  filter(ROI1 != ROI2) %>%
  # Omit instances where the two ROIs are the same, just in different columns
  mutate(ROI12 = ifelse(ROI1<ROI2, paste(ROI1, ROI2, sep="_"),
                        paste(ROI2, ROI1, sep="_"))) %>%
  distinct(ROI12, .keep_all=T) %>%
  select(-ROI12) %>%
  mutate(FDR=p.adjust(p.val, method="fdr"))


# Merge the two long-format dataframes
original.roi.corr.results <- left_join(original.roi.corr.coef.long, original.roi.corr.p.long)
```


```{r}
edges <- read.csv("tau_roi_nodes.csv") %>% distinct()
rois <- edges %>% filter(!(to %in% c("Cingulate", "Frontal", "Insula",
                                     "Occipital", "Parietal", "Temporal")))

#create a vertices data.frame. One line per object of the ROI hierarchy
vertices = data.frame(name = unique(c(as.character(edges$from), as.character(edges$to))))
vertices$group <- edges$from[match(vertices$name, edges$to)]

#Create a graph object
mygraph <- graph_from_data_frame( edges, vertices=vertices )

curve_to_aparc <- read.csv("curve_to_aparc.csv")
curve_to_aseg <- read.csv("curve_to_aseg.csv")
```


Save this data to an .RData file to be loaded into the Shiny app:
```{r}
save(original.roi.corr.coef, og.importance, original.roi.corr.results, ggseg.aparc, ggseg.aseg, rois, vertices, mygraph, curve_to_aparc, curve_to_aseg, file="shiny_data.RData")
```



The Shiny app can be viewed [here.]( https://annie-bryant.shinyapps.io/AV1451_TauPET_Uptake_Change_Analysis/)
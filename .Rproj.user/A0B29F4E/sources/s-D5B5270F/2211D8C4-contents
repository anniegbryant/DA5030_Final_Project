---
title: "Figure 05"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = F, message=F, warning=F)
```

```{r}
library(tidyverse)
library(broom)
library(tidyr)
library(readxl)
library(forcats)
library(data.table)
library(colorspace)
library(colormap)
library(ggrepel)
library(ggsignif)
library(FactoMineR)
library(factoextra)
library(missMDA)
library(knitr)
library(kableExtra)

load("../All_Data/Imputed_qPCR_Data.RData")
load("../All_Data/Gene_Protein.RData")
qPCR <- raw_qPCR
rm(raw_qPCR)
```

Since Braak 0-II are treated as one group, the dataframe will be updated accordingly:
```{r}
qPCR <- qPCR %>%
  mutate(ABC_B = str_replace(ABC_B,"0|1", "1")) %>%
  filter(ABC_B %in% c("1", "3"))
```


Load the hypothesized gene functional groups:
```{r}
gene_functions <- read_excel("../All_Data/gene_functions.xlsx")
gene_functions$Function <- factor(gene_functions$Function, levels=c(
  "Senescence-Associated",
  "Endothelial Cell Markers",
  "Cell Adhesion",
  "Junction Markers",
  "VEGF/Notch Pathways",
  "Cell Stress",
  "Plasmin/APOE Pathways",
  "Astrocyte Marker",
  "Smooth Muscle Cell Marker",
  "Microglia Marker"
))

```



Principal Component Analysis

```{r}
df.pca <- qPCR %>% 
  dplyr::select(Sample_ID, ABC_B, Gene, Fold_Change) %>%
  pivot_wider(., id_cols=c("Sample_ID", "ABC_B"), names_from="Gene",
              values_from="Fold_Change")

df.pca.active <- df.pca %>%
  dplyr::select(-Sample_ID, -ABC_B)
```


PCA is performed on the complete imputed dataset. Values are centered to have mean 0 but not scaled, since all values are already in the same comparable log2 fold change units.
```{r}
res.pca <- prcomp(df.pca.active, center=T, scale. = F)
```

The variable info can be extracted as follows:
```{r}
var <- get_pca_var(res.pca)
```

ABC-Braak score info can be merged with the PCA results for downstream analysis:
```{r}
post.pca <- as.data.frame(res.pca$x[,1:4]) %>%
  cbind(., df.pca$Sample_ID) %>%
  rename("Sample_ID" = "df.pca$Sample_ID") %>%
  left_join(., Subject_Info) %>%
  mutate(ABC_B = str_replace(ABC_B, "0|1", "1")) %>%
  dplyr::select(Sample_ID, ABC_B, PC1:PC4) %>%
  pivot_longer(., cols=c("PC1", "PC2", "PC3", "PC4"),
               names_to="PrComp", values_to="PC_Score")
```
Examine proportion of variance explained by each component with a Scree plot:

```{r}
cumpro <- cumsum(res.pca$sdev^2 / sum(res.pca$sdev^2)*100)
variances <- data.frame((res.pca$sdev^2/sum(res.pca$sdev^2))*100)
variances$PC <- c(1:28)
variances$cumpro <- cumpro
colnames(variances) <- c("Variance_Proportion", "PC", "CumVar")

newrow <- subset(variances, PC == 4)
newrow$PC <- 4.5
variances <- plyr::rbind.fill(variances, newrow)

linecolors <- c("Component Variance" = "maroon4",
                "Cumulative Variance" = "green4")

variances %>%
  filter(PC %in% 1:5) %>%
  ggplot(data=., mapping=aes(x=PC, y=Variance_Proportion)) +
  geom_bar(data=subset(variances, PC < 5), stat="identity", fill="steelblue") +
  geom_text(aes(label=sprintf("%s%%", 
                              as.character(round(Variance_Proportion, 1)))), 
            data=subset(variances, PC < 4.1),
            nudge_y=2,
            nudge_x=0.4,
            size=4,
            check_overlap = T) +
  geom_line(aes(x=PC, y=Variance_Proportion, color="Component Variance",), size=0.7,
            data=subset(variances, PC < 4.1)) +
  geom_line(aes(x=PC, y=CumVar, color="Cumulative Variance"), size=0.7,
            data=subset(variances, PC < 5)) +
  geom_point(data=subset(variances, PC < 4.1), 
             aes(x=PC, y=Variance_Proportion), size=2) +
  scale_colour_manual(name="",values=linecolors, 
                      guide = guide_legend(override.aes=list(size=2))) + 
  theme_minimal() +
  ylab("Percentage of Variance Explained") +
  xlab("Principal Component") +
  ggtitle("Principal Components\nContribution to Subject Variance") +
  xlim(c(0.5, 4.5)) +
  scale_y_continuous(breaks=seq(0, 80, 10),
                     sec.axis = dup_axis(name="")) +
  theme(plot.title = element_text(hjust=0.5, size=14),
        axis.text = element_text(size=12),
        panel.grid = element_blank(),
        legend.position="bottom",
        legend.text = element_text(size=12))
```


Individual gene contributions (loadings) per component can be extracted:
```{r}
loadings_wide <- data.frame(res.pca$rotation) %>%
  cbind(rownames(.), .) %>%
  remove_rownames %>% 
  rename("Gene" = "rownames(.)")
```



Figure 5A scatter plot for gene loadings:
```{r}
GeneNames <- loadings_wide %>%
  left_join(., gene_functions) %>%
  select(Gene, Function, PC1, PC2) %>%
  mutate_if(is.numeric, function(x) -1*x) %>%
  filter(PC1 > 0.18)

loadings_wide %>%
  left_join(., gene_functions) %>%
  select(Gene, Function, PC1, PC2) %>%
  mutate_if(is.numeric, function(x) -1*x) %>%
  ggplot(data=., mapping=aes(x=PC1, y=PC2)) +
  
  geom_hline(yintercept=0, linetype=2, alpha=0.5) +
  geom_vline(xintercept=0, linetype=2, alpha=0.5) +
  #geom_vline(xintercept=0.23, size=1.3) +
  scale_x_continuous(limits=c(-0.25, 0.4)) +
  geom_rect(data=subset(GeneNames, Gene=="CDKN1A"),
            aes(xmin=0.23, xmax=0.4, ymin=-Inf, ymax=Inf),
            alpha=0.3, fill="snow3") +
  geom_point(size=3, aes(color=Function)) +
  geom_text_repel(data=GeneNames, aes(label=Gene, color=Function,
                                      fontface=2), size=4,
                  show_guide=F) +
  theme_minimal() +
  ylab("PC2 (21.4% Variance)") +
  xlab("PC1 (30.1% Variance)") +
  labs(color="Hypothesis-Driven\nFunctional Group")
```

Extract PCA info about individual samples:

```{r}
ind <- get_pca_ind(res.pca)
PC1_coord <- ind$coord[,1]
PC2_coord <- ind$coord[,2]

PC1_individuals <- as.data.frame(cbind(PC1_coord, df.pca$Sample_ID)) %>%
  rename("Sample_ID" = "V2") %>%
  mutate(Sample_ID = as.character(Sample_ID),
         PC1_coord = as.numeric(as.character(PC1_coord))) %>%
  arrange(desc(PC1_coord))

PC2_individuals <- as.data.frame(cbind(PC2_coord, df.pca$Sample_ID)) %>%
  rename("Sample_ID" = "V2") %>%
  mutate(Sample_ID = as.character(Sample_ID),
         PC2_coord = as.numeric(as.character(PC2_coord))) %>%
  arrange(desc(PC2_coord))

PC_individuals <- left_join(PC1_individuals, PC2_individuals) %>%
  left_join(Subject_Info) %>%
  mutate(Cerebrovascular = ifelse(is.na(Cerebrovascular_Pathology), "No", "Yes")) %>%
  mutate_at(c("ABC_A", "ABC_B", "ABC_C"), function(x) str_replace(x, "0|1", "0-1"))

```

Figure 5B scatterplot B1 vs. B3 samples by PC1 and PC2 scores:
```{r}
# install.packages("ggalt")
library(ggalt)

PC_individuals %>%
  mutate_at(c("PC1_coord", "PC2_coord"), function(x) -1*x) %>%
  ggplot(data=., mapping=aes(x=PC1_coord, y=PC2_coord, color=ABC_B, fill=ABC_B)) +
  geom_point(size=3) +
  geom_encircle(alpha=0.3, s_shape = 1, expand = 0,
                color = "black", show.legend = FALSE) +
  ylab("PC2 (21.4% Variance)") +
  xlab("PC1 (30.1% Variance)") +
  labs(color="ABC-Braak\nScore",
       fill="ABC-Braak\nScore") +
  scale_color_manual(values=c("deepskyblue2", "indianred2")) +
  scale_fill_manual(values=c("deepskyblue2", "indianred2")) +
  geom_hline(yintercept = 0, linetype=2, size=0.5, alpha=0.5) +
  geom_vline(xintercept = 0, linetype=2, size=0.5, alpha=0.5) +
  theme_minimal()
```



Figure 5C boxplot of PC1 and PC2 scores between B1 vs. B3:
```{r}
post.pca %>%
  filter(PrComp=="PC1") %>%
  mutate(PC_Score = -1 * PC_Score) %>%
  ggplot(data=., mapping=aes(x=ABC_B, y=PC_Score)) +
  geom_boxplot(aes(color=ABC_B)) +
  geom_signif(map_signif_level = T, comparisons=list(c("1", "3")),
              test="t.test", margin_top=0.08) +
  scale_y_continuous(expand=expansion(0.2, 0)) +
  theme_minimal() +
  ylab("Composite Gene Score") +
  xlab("ABC-Braak Score") +
  scale_color_manual(values=c("deepskyblue2", "indianred2")) +
  theme(legend.position="none")
```

### t-test
```{r}
post.pca %>%
  filter(PrComp=="PC1" | PrComp == "PC2") %>%
  mutate(PC_Score = -1*PC_Score) %>%
  group_by(PrComp) %>%
  do(model=t.test(PC_Score ~ ABC_B, data=.)) %>%
  tidy(model) %>%
  kable(.) %>%
  kable_styling(full_width = F)
```


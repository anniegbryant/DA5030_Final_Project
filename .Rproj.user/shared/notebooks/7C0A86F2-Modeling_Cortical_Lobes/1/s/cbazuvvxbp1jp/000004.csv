"0","# Print kNN model summary"
"0","ensemble.models$knn"
"1","k-Nearest Neighbors"
"1"," "
"1","

"
"1","246"
"1",""
"1"," samples"
"1","
"
"1","  8"
"1",""
"1"," predictor"
"1",""
"1","
"
"1","
"
"1","Pre-processing: centered (8), scaled (8)"
"1"," "
"1","
"
"1","Resampling:"
"1"," "
"1","Cross-Validated (10 fold)"
"1"," "
"1","
"
"1","Summary of sample sizes:"
"1"," "
"1","221, 222, 221, 222, 222, 221, ..."
"1"," "
"1","
"
"1","Resampling results"
"1"," across tuning parameters"
"1",":

"
"1",""
"1","  k "
"1","  RMSE    "
"1","  Rsquared  "
"1","  MAE      "
"1","
"
"1","   5"
"1","  1.107192"
"1","  0.07302604"
"1","  0.6501571"
"1","
"
"1","   7"
"1","  1.103811"
"1","  0.05925652"
"1","  0.6537839"
"1","
"
"1","   9"
"1","  1.092773"
"1","  0.03955904"
"1","  0.6489966"
"1","
"
"1","  11"
"1","  1.080964"
"1","  0.04281474"
"1","  0.6400736"
"1","
"
"1","  13"
"1","  1.063219"
"1","  0.05810530"
"1","  0.6249247"
"1","
"
"1","  15"
"1","  1.054257"
"1","  0.06719400"
"1","  0.6222031"
"1","
"
"1","  17"
"1","  1.063972"
"1","  0.05253539"
"1","  0.6255530"
"1","
"
"1","  19"
"1","  1.067825"
"1","  0.04350845"
"1","  0.6238405"
"1","
"
"1","  21"
"1","  1.066776"
"1","  0.04900117"
"1","  0.6226638"
"1","
"
"1","  23"
"1","  1.073400"
"1","  0.04351178"
"1","  0.6239306"
"1","
"
"1","  25"
"1","  1.070993"
"1","  0.04368831"
"1","  0.6199548"
"1","
"
"1","  27"
"1","  1.071035"
"1","  0.04792044"
"1","  0.6177739"
"1","
"
"1","  29"
"1","  1.069877"
"1","  0.05075853"
"1","  0.6172153"
"1","
"
"1","  31"
"1","  1.069343"
"1","  0.04840288"
"1","  0.6143285"
"1","
"
"1","  33"
"1","  1.077242"
"1","  0.04448998"
"1","  0.6180380"
"1","
"
"1","  35"
"1","  1.076238"
"1","  0.04480808"
"1","  0.6152146"
"1","
"
"1","  37"
"1","  1.078176"
"1","  0.04614663"
"1","  0.6150701"
"1","
"
"1","  39"
"1","  1.083048"
"1","  0.03764211"
"1","  0.6205318"
"1","
"
"1","  41"
"1","  1.081515"
"1","  0.03624130"
"1","  0.6188928"
"1","
"
"1","  43"
"1","  1.079126"
"1","  0.03179071"
"1","  0.6168043"
"1","
"
"1","
"
"1","RMSE was used to select the optimal model using the smallest value.
"
"1","The final value used for the model was k = 15."
"1","
"
"0","# kNN cross-validation plot"
"0","knn.k <- ensemble.models$knn$results$k"
"0","knn.rmse <- ensemble.models$knn$results$RMSE"
"0","knn.mae <- ensemble.models$knn$results$MAE"
"0",""
"0","# Plot the RMSE and MAE in a facet plot using facet_wrap"
"0","p.knn.cv <- data.frame(k=knn.k, RMSE=knn.rmse, MAE=knn.mae) %>%"
"0","  pivot_longer(cols=c(RMSE, MAE), names_to=""Metric"", values_to=""Value"") %>%"
"0","  mutate(Metric = ifelse(Metric==""MAE"", ""Mean Absolute Error"", ""Root-Mean Square Error"")) %>%"
"0","  # One line per value of alpha"
"0","  ggplot(data=., mapping=aes(x=k, y=Value, color=Metric)) +"
"0","  # Facet the MAE and RMSE in separate plots"
"0","  facet_wrap(Metric ~ ., scales=""free"") +"
"0","  geom_point() +"
"0","  geom_line() +"
"0","  theme_minimal() +"
"0","  ggtitle(""kNN Regression Cross-Validated Results"") +"
"0","  theme(plot.title=element_text(hjust=0.5),"
"0","        axis.title=element_blank(),"
"0","        panel.spacing = unit(2, ""lines""))"
"0",""
"0","# Convert to interactive plotly"
"0","ggplotly(p.knn.cv) %>% "
"0","  layout(yaxis = list(title = ""MAE"", "
"0","                      titlefont = list(size = 12)),"
"0","         xaxis = list(title = ""k"", "
"0","                      titlefont = list(size = 12)),"
"0","         yaxis2 = list(title = ""RMSE"", "
"0","                       titlefont = list(size = 12)),"
"0","         xaxis2 = list(title = ""k"", "
"0","                       titlefont = list(size = 12)),"
"0","         autosize = F, width = 900, height = 400)"
"2","Specifying width/height in layout() is now deprecated.
Please specify in ggplotly() or plot_ly()"

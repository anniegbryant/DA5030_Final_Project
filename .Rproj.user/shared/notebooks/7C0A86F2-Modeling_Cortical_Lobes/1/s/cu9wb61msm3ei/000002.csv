"0","# Print neural network model summary"
"0","ensemble.models$nnet"
"1","Neural Network"
"1"," "
"1","

"
"1","246"
"1",""
"1"," samples"
"1","
"
"1","  8"
"1",""
"1"," predictor"
"1",""
"1","
"
"1","
"
"1","Pre-processing: centered (8), scaled (8)"
"1"," "
"1","
"
"1","Resampling:"
"1"," "
"1","Cross-Validated (10 fold)"
"1"," "
"1","
"
"1","Summary of sample sizes:"
"1"," "
"1","221, 222, 221, 222, 222, 221, ..."
"1"," "
"1","
"
"1","Resampling results"
"1"," across tuning parameters"
"1",":

"
"1",""
"1","  size"
"1","  decay"
"1","  RMSE     "
"1","  Rsquared  "
"1","  MAE      "
"1","
"
"1","   1  "
"1","  0.0  "
"1","   1.245690"
"1","  0.15166462"
"1","  0.7053475"
"1","
"
"1","   1  "
"1","  0.2  "
"1","   1.198075"
"1","  0.09028417"
"1","  0.7142961"
"1","
"
"1","   1  "
"1","  0.4  "
"1","   1.169390"
"1","  0.10492935"
"1","  0.7057446"
"1","
"
"1","   1  "
"1","  0.6  "
"1","   1.141485"
"1","  0.12019571"
"1","  0.7016722"
"1","
"
"1","   1  "
"1","  0.8  "
"1","   1.110522"
"1","  0.16281964"
"1","  0.6976585"
"1","
"
"1","   1  "
"1","  1.0  "
"1","   1.107683"
"1","  0.16027783"
"1","  0.6970955"
"1","
"
"1","   3  "
"1","  0.0  "
"1","   1.712916"
"1","  0.13281912"
"1","  0.9139845"
"1","
"
"1","   3  "
"1","  0.2  "
"1","   1.251255"
"1","  0.03420884"
"1","  0.7894735"
"1","
"
"1","   3  "
"1","  0.4  "
"1","   1.198274"
"1","  0.10061319"
"1","  0.7599557"
"1","
"
"1","   3  "
"1","  0.6  "
"1","   1.159946"
"1","  0.06386280"
"1","  0.7331481"
"1","
"
"1","   3  "
"1","  0.8  "
"1","   1.188469"
"1","  0.06028438"
"1","  0.7321538"
"1","
"
"1","   3  "
"1","  1.0  "
"1","   1.133342"
"1","  0.07567047"
"1","  0.6947239"
"1","
"
"1","   5  "
"1","  0.0  "
"1","  10.468680"
"1","  0.10319745"
"1","  2.7156369"
"1","
"
"1","   5  "
"1","  0.2  "
"1","   1.447784"
"1","  0.09856635"
"1","  0.8949424"
"1","
"
"1","   5  "
"1","  0.4  "
"1","   1.365099"
"1","  0.09001070"
"1","  0.8732478"
"1","
"
"1","   5  "
"1","  0.6  "
"1","   1.218252"
"1","  0.06958312"
"1","  0.7633906"
"1","
"
"1","   5  "
"1","  0.8  "
"1","   1.196107"
"1","  0.10006494"
"1","  0.7481264"
"1","
"
"1","   5  "
"1","  1.0  "
"1","   1.182999"
"1","  0.10469178"
"1","  0.7279717"
"1","
"
"1","  10  "
"1","  0.0  "
"1","   1.998661"
"1","  0.07082981"
"1","  1.2652291"
"1","
"
"1","  10  "
"1","  0.2  "
"1","   1.453192"
"1","  0.06660054"
"1","  0.9800577"
"1","
"
"1","  10  "
"1","  0.4  "
"1","   1.310242"
"1","  0.03110645"
"1","  0.8858864"
"1","
"
"1","  10  "
"1","  0.6  "
"1","   1.255780"
"1","  0.09319997"
"1","  0.8084398"
"1","
"
"1","  10  "
"1","  0.8  "
"1","   1.234862"
"1","  0.07430756"
"1","  0.7592734"
"1","
"
"1","  10  "
"1","  1.0  "
"1","   1.187241"
"1","  0.11712181"
"1","  0.7243907"
"1","
"
"1","  15  "
"1","  0.0  "
"1","   1.741426"
"1","  0.05719791"
"1","  1.2122015"
"1","
"
"1","  15  "
"1","  0.2  "
"1","   1.474091"
"1","  0.07627155"
"1","  1.0129055"
"1","
"
"1","  15  "
"1","  0.4  "
"1","   1.371093"
"1","  0.03945652"
"1","  0.9030756"
"1","
"
"1","  15  "
"1","  0.6  "
"1","   1.305277"
"1","  0.08997026"
"1","  0.8305314"
"1","
"
"1","  15  "
"1","  0.8  "
"1","   1.227082"
"1","  0.12982494"
"1","  0.7615322"
"1","
"
"1","  15  "
"1","  1.0  "
"1","   1.171387"
"1","  0.08693675"
"1","  0.7287818"
"1","
"
"1","
"
"1","RMSE was used to select the optimal model using the smallest value.
"
"1","The final values used for the model were size = 1 and decay = 1."
"1","
"
"0","# Neural network cross-validation plot"
"0","n.neurons <- ensemble.models$nnet$results$size"
"0","nnet.rmse <- ensemble.models$nnet$results$RMSE"
"0","nnet.mae <- ensemble.models$nnet$results$MAE"
"0","nnet.weight <- ensemble.models$nnet$results$decay"
"0",""
"0","# Plot the RMSE and MAE in a facet plot using facet_wrap"
"0","p.nnet.cv <- data.frame(n.neurons, RMSE=nnet.rmse, MAE=nnet.mae, decay=nnet.weight) %>%"
"0","  mutate(decay=as.character(decay)) %>%"
"0","  pivot_longer(cols=c(RMSE, MAE), names_to=""Metric"", values_to=""Value"") %>%"
"0","  mutate(Metric = ifelse(Metric==""MAE"", ""Mean Absolute Error"", ""Root-Mean Square Error"")) %>%"
"0","  # One line per value of alpha"
"0","  ggplot(data=., mapping=aes(x=n.neurons, y=Value, color=decay)) +"
"0","  # Facet the MAE and RMSE in separate plots"
"0","  facet_wrap(Metric ~ ., scales=""free"") +"
"0","  geom_point() +"
"0","  geom_line(aes(group=decay)) +"
"0","  theme_minimal() +"
"0","  ggtitle(""Neural Network Regression Cross-Validated Results"") +"
"0","  theme(plot.title=element_text(hjust=0.5),"
"0","        axis.title=element_blank(),"
"0","        panel.spacing = unit(2, ""lines""))"
"0",""
"0","# Convert to interactive plotly"
"0","ggplotly(p.nnet.cv) %>% "
"0","  layout(yaxis = list(title = ""MAE"", "
"0","                      titlefont = list(size = 12)),"
"0","         xaxis = list(title = ""# Neurons in Hidden Layer"", "
"0","                      titlefont = list(size = 12)),"
"0","         yaxis2 = list(title = ""RMSE"", "
"0","                       titlefont = list(size = 12)),"
"0","         xaxis2 = list(title = ""# Neurons in Hidden Layer"", "
"0","                       titlefont = list(size = 12)),"
"0","         autosize = F, width = 900, height = 400)"
"2","Specifying width/height in layout() is now deprecated.
Please specify in ggplotly() or plot_ly()"

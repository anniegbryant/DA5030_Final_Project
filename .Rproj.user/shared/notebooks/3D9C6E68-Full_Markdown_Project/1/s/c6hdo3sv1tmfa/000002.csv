"0","# Print neural network model summary"
"0","ensemble.models$nnet"
"1","Neural Network"
"1"," "
"1","

"
"1","246"
"1",""
"1"," samples"
"1","
"
"1","  7"
"1",""
"1"," predictor"
"1",""
"1","
"
"1","
"
"1","Pre-processing: centered (7), scaled (7)"
"1"," "
"1","
"
"1","Resampling:"
"1"," "
"1","Cross-Validated (10 fold)"
"1"," "
"1","
"
"1","Summary of sample sizes:"
"1"," "
"1","221, 222, 221, 222, 222, 221, ..."
"1"," "
"1","
"
"1","Resampling results"
"1"," across tuning parameters"
"1",":

"
"1",""
"1","  size"
"1","  decay"
"1","  RMSE    "
"1","  Rsquared  "
"1","  MAE      "
"1","
"
"1","   1  "
"1","  0.0  "
"1","  1.245644"
"1","  0.09270336"
"1","  0.7320901"
"1","
"
"1","   1  "
"1","  0.2  "
"1","  1.192384"
"1","  0.05973576"
"1","  0.7215185"
"1","
"
"1","   1  "
"1","  0.4  "
"1","  1.167875"
"1","  0.06849000"
"1","  0.6952365"
"1","
"
"1","   1  "
"1","  0.6  "
"1","  1.166977"
"1","  0.09277111"
"1","  0.7182222"
"1","
"
"1","   1  "
"1","  0.8  "
"1","  1.138191"
"1","  0.07626984"
"1","  0.7016022"
"1","
"
"1","   1  "
"1","  1.0  "
"1","  1.147937"
"1","  0.11282020"
"1","  0.7182524"
"1","
"
"1","   3  "
"1","  0.0  "
"1","  1.279886"
"1","  0.08310500"
"1","  0.7504749"
"1","
"
"1","   3  "
"1","  0.2  "
"1","  1.245645"
"1","  0.07589623"
"1","  0.7871604"
"1","
"
"1","   3  "
"1","  0.4  "
"1","  1.199659"
"1","  0.08438305"
"1","  0.7179262"
"1","
"
"1","   3  "
"1","  0.6  "
"1","  1.153764"
"1","  0.08378698"
"1","  0.7050315"
"1","
"
"1","   3  "
"1","  0.8  "
"1","  1.151742"
"1","  0.05853814"
"1","  0.6968032"
"1","
"
"1","   3  "
"1","  1.0  "
"1","  1.139317"
"1","  0.04608047"
"1","  0.6920970"
"1","
"
"1","   5  "
"1","  0.0  "
"1","  2.852068"
"1","  0.10901075"
"1","  1.2135027"
"1","
"
"1","   5  "
"1","  0.2  "
"1","  1.186223"
"1","  0.07133170"
"1","  0.7566989"
"1","
"
"1","   5  "
"1","  0.4  "
"1","  1.299139"
"1","  0.05493359"
"1","  0.8220907"
"1","
"
"1","   5  "
"1","  0.6  "
"1","  1.240741"
"1","  0.03175004"
"1","  0.7999623"
"1","
"
"1","   5  "
"1","  0.8  "
"1","  1.150480"
"1","  0.03837154"
"1","  0.7027839"
"1","
"
"1","   5  "
"1","  1.0  "
"1","  1.152905"
"1","  0.04999714"
"1","  0.7128881"
"1","
"
"1","  10  "
"1","  0.0  "
"1","  1.617319"
"1","  0.04562712"
"1","  1.1305324"
"1","
"
"1","  10  "
"1","  0.2  "
"1","  1.312021"
"1","  0.05878781"
"1","  0.8568002"
"1","
"
"1","  10  "
"1","  0.4  "
"1","  1.283676"
"1","  0.06840569"
"1","  0.8449359"
"1","
"
"1","  10  "
"1","  0.6  "
"1","  1.172149"
"1","  0.05627968"
"1","  0.7334233"
"1","
"
"1","  10  "
"1","  0.8  "
"1","  1.163288"
"1","  0.05143240"
"1","  0.7458729"
"1","
"
"1","  10  "
"1","  1.0  "
"1","  1.186060"
"1","  0.04664239"
"1","  0.7251889"
"1","
"
"1","  15  "
"1","  0.0  "
"1","  1.828227"
"1","  0.10215527"
"1","  1.2971160"
"1","
"
"1","  15  "
"1","  0.2  "
"1","  1.440809"
"1","  0.05869640"
"1","  0.9635911"
"1","
"
"1","  15  "
"1","  0.4  "
"1","  1.286711"
"1","  0.03298476"
"1","  0.8384455"
"1","
"
"1","  15  "
"1","  0.6  "
"1","  1.241962"
"1","  0.06854765"
"1","  0.7906647"
"1","
"
"1","  15  "
"1","  0.8  "
"1","  1.184070"
"1","  0.06865887"
"1","  0.7409692"
"1","
"
"1","  15  "
"1","  1.0  "
"1","  1.159711"
"1","  0.02835005"
"1","  0.7211840"
"1","
"
"1","
"
"1","RMSE was used to select the optimal model using the smallest value.
"
"1","The final values used for the model were size = 1 and decay = 0.8."
"1","
"
"0","# Neural network cross-validation plot"
"0","n.neurons <- ensemble.models$nnet$results$size"
"0","nnet.rmse <- ensemble.models$nnet$results$RMSE"
"0","nnet.mae <- ensemble.models$nnet$results$MAE"
"0","nnet.weight <- ensemble.models$nnet$results$decay"
"0",""
"0","# Plot the RMSE and MAE in a facet plot using facet_wrap"
"0","p.nnet.cv <- data.frame(n.neurons, RMSE=nnet.rmse, MAE=nnet.mae, decay=nnet.weight) %>%"
"0","  mutate(decay=as.character(decay)) %>%"
"0","  pivot_longer(cols=c(RMSE, MAE), names_to=""Metric"", values_to=""Value"") %>%"
"0","  mutate(Metric = ifelse(Metric==""MAE"", ""Mean Absolute Error"", ""Root-Mean Square Error"")) %>%"
"0","  # One line per value of alpha"
"0","  ggplot(data=., mapping=aes(x=n.neurons, y=Value, color=decay)) +"
"0","  # Facet the MAE and RMSE in separate plots"
"0","  facet_wrap(Metric ~ ., scales=""free"") +"
"0","  geom_point() +"
"0","  geom_line(aes(group=decay)) +"
"0","  theme_minimal() +"
"0","  ggtitle(""Neural Network Regression Cross-Validated Results"") +"
"0","  theme(plot.title=element_text(hjust=0.5),"
"0","        axis.title=element_blank(),"
"0","        panel.spacing = unit(2, ""lines""))"
"0",""
"0","# Convert to interactive plotly"
"0","ggplotly(p.nnet.cv) %>% "
"0","  layout(yaxis = list(title = ""MAE"", "
"0","                      titlefont = list(size = 12)),"
"0","         xaxis = list(title = ""# Neurons in Hidden Layer"", "
"0","                      titlefont = list(size = 12)),"
"0","         yaxis2 = list(title = ""RMSE"", "
"0","                       titlefont = list(size = 12)),"
"0","         xaxis2 = list(title = ""# Neurons in Hidden Layer"", "
"0","                       titlefont = list(size = 12)),"
"0","         autosize = F, width = 900, height = 400)"
"2","Specifying width/height in layout() is now deprecated.
Please specify in ggplotly() or plot_ly()"

"0","# Print neural network model summary"
"0","ensemble.models$nnet"
"1","Neural Network"
"1"," "
"1","

"
"1","246"
"1",""
"1"," samples"
"1","
"
"1"," 33"
"1",""
"1"," predictor"
"1",""
"1","
"
"1","
"
"1","Pre-processing: centered (33), scaled (33)"
"1"," "
"1","
"
"1","Resampling:"
"1"," "
"1","Cross-Validated (10 fold)"
"1"," "
"1","
"
"1","Summary of sample sizes:"
"1"," "
"1","221, 222, 221, 222, 222, 221, ..."
"1"," "
"1","
"
"1","Resampling results"
"1"," across tuning parameters"
"1",":

"
"1",""
"1","  size"
"1","  decay"
"1","  RMSE    "
"1","  Rsquared  "
"1","  MAE      "
"1","
"
"1","   1  "
"1","  0.0  "
"1","  1.328625"
"1","  0.13757164"
"1","  0.7145074"
"1","
"
"1","   1  "
"1","  0.2  "
"1","  1.264576"
"1","  0.21623652"
"1","  0.6936230"
"1","
"
"1","   1  "
"1","  0.4  "
"1","  1.217789"
"1","  0.30336524"
"1","  0.6717363"
"1","
"
"1","   1  "
"1","  0.6  "
"1","  1.191167"
"1","  0.27985600"
"1","  0.6736006"
"1","
"
"1","   1  "
"1","  0.8  "
"1","  1.137362"
"1","  0.30955177"
"1","  0.6643404"
"1","
"
"1","   1  "
"1","  1.0  "
"1","  1.098219"
"1","  0.34422851"
"1","  0.6551192"
"1","
"
"1","   3  "
"1","  0.0  "
"1","  1.741657"
"1","  0.20942663"
"1","  1.0281973"
"1","
"
"1","   3  "
"1","  0.2  "
"1","  1.323120"
"1","  0.14957709"
"1","  0.9070708"
"1","
"
"1","   3  "
"1","  0.4  "
"1","  1.270399"
"1","  0.10796698"
"1","  0.8759850"
"1","
"
"1","   3  "
"1","  0.6  "
"1","  1.154506"
"1","  0.18820124"
"1","  0.7570883"
"1","
"
"1","   3  "
"1","  0.8  "
"1","  1.248311"
"1","  0.18326235"
"1","  0.8263540"
"1","
"
"1","   3  "
"1","  1.0  "
"1","  1.080586"
"1","  0.26200460"
"1","  0.7156278"
"1","
"
"1","   5  "
"1","  0.0  "
"1","  1.687248"
"1","  0.12168509"
"1","  1.1217697"
"1","
"
"1","   5  "
"1","  0.2  "
"1","  1.463661"
"1","  0.08668264"
"1","  0.9990230"
"1","
"
"1","   5  "
"1","  0.4  "
"1","  1.361751"
"1","  0.12156121"
"1","  0.9220889"
"1","
"
"1","   5  "
"1","  0.6  "
"1","  1.211507"
"1","  0.15780435"
"1","  0.8068860"
"1","
"
"1","   5  "
"1","  0.8  "
"1","  1.206544"
"1","  0.13201464"
"1","  0.8103969"
"1","
"
"1","   5  "
"1","  1.0  "
"1","  1.237265"
"1","  0.19792066"
"1","  0.8266016"
"1","
"
"1","  10  "
"1","  0.0  "
"1","  1.795388"
"1","  0.02723955"
"1","  1.3591350"
"1","
"
"1","  10  "
"1","  0.2  "
"1","  1.320734"
"1","  0.13099843"
"1","  0.9296914"
"1","
"
"1","  10  "
"1","  0.4  "
"1","  1.321488"
"1","  0.11481149"
"1","  0.9128680"
"1","
"
"1","  10  "
"1","  0.6  "
"1","  1.282147"
"1","  0.08057191"
"1","  0.8739253"
"1","
"
"1","  10  "
"1","  0.8  "
"1","  1.243587"
"1","  0.11041300"
"1","  0.8242700"
"1","
"
"1","  10  "
"1","  1.0  "
"1","  1.231847"
"1","  0.07735076"
"1","  0.8450555"
"1","
"
"1","  15  "
"1","  0.0  "
"1","  1.641867"
"1","  0.04385296"
"1","  1.2404813"
"1","
"
"1","  15  "
"1","  0.2  "
"1","  1.428081"
"1","  0.08025674"
"1","  0.9245121"
"1","
"
"1","  15  "
"1","  0.4  "
"1","  1.327971"
"1","  0.06838231"
"1","  0.8721033"
"1","
"
"1","  15  "
"1","  0.6  "
"1","  1.250592"
"1","  0.12015134"
"1","  0.8584150"
"1","
"
"1","  15  "
"1","  0.8  "
"1","  1.213121"
"1","  0.13089912"
"1","  0.8159638"
"1","
"
"1","  15  "
"1","  1.0  "
"1","  1.165197"
"1","  0.16543419"
"1","  0.7901996"
"1","
"
"1","
"
"1","RMSE was used to select the optimal model using the smallest value.
"
"1","The final values used for the model were size = 3 and decay = 1."
"1","
"
"0","# Neural network cross-validation plot"
"0","n.neurons <- ensemble.models$nnet$results$size"
"0","nnet.rmse <- ensemble.models$nnet$results$RMSE"
"0","nnet.mae <- ensemble.models$nnet$results$MAE"
"0","nnet.weight <- ensemble.models$nnet$results$decay"
"0",""
"0","# Plot the RMSE and MAE in a facet plot using facet_wrap"
"0","p.nnet.cv <- data.frame(n.neurons, RMSE=nnet.rmse, MAE=nnet.mae, decay=nnet.weight) %>%"
"0","  mutate(decay=as.character(decay)) %>%"
"0","  pivot_longer(cols=c(RMSE, MAE), names_to=""Metric"", values_to=""Value"") %>%"
"0","  mutate(Metric = ifelse(Metric==""MAE"", ""Mean Absolute Error"", ""Root-Mean Square Error"")) %>%"
"0","  # One line per value of alpha"
"0","  ggplot(data=., mapping=aes(x=n.neurons, y=Value, color=decay)) +"
"0","  # Facet the MAE and RMSE in separate plots"
"0","  facet_wrap(Metric ~ ., scales=""free"") +"
"0","  geom_point() +"
"0","  geom_line(aes(group=decay)) +"
"0","  theme_minimal() +"
"0","  ggtitle(""Neural Network Regression Cross-Validated Results"") +"
"0","  theme(plot.title=element_text(hjust=0.5),"
"0","        axis.title=element_blank(),"
"0","        panel.spacing = unit(2, ""lines""))"
"0",""
"0","# Convert to interactive plotly"
"0","ggplotly(p.nnet.cv) %>% "
"0","  layout(yaxis = list(title = ""MAE"", "
"0","                      titlefont = list(size = 12)),"
"0","         xaxis = list(title = ""# Neurons in Hidden Layer"", "
"0","                      titlefont = list(size = 12)),"
"0","         yaxis2 = list(title = ""RMSE"", "
"0","                       titlefont = list(size = 12)),"
"0","         xaxis2 = list(title = ""# Neurons in Hidden Layer"", "
"0","                       titlefont = list(size = 12)),"
"0","         autosize = F, width = 900, height = 400)"
"2","Specifying width/height in layout() is now deprecated.
Please specify in ggplotly() or plot_ly()"

"0","# Set seed for consistency"
"0","set.seed(127)"
"0",""
"0","# Neural net -- linout=T means linear output (i.e. not constrained to be [0,1]),"
"0","# try a range of hidden layer sizes and weight decays"
"0","my.neuralnet <- caretModelSpec(method=""nnet"", linout=T, trace=F, tuneGrid = expand.grid(size=c(1, 3, 5, 10, 15), decay = seq(0, 1, by=0.2)))"
"0",""
"0","# k-nearest neighbors: try 20 different values of k"
"0","my.knn <- caretModelSpec(method=""knn"", tuneLength=20)"
"0",""
"0","# random forest: try 15 different numbers of features considered at each node and use 500 sampled trees"
"0","my.randomforest <- caretModelSpec(method=""ranger"", tuneLength=15, num.trees=500, importance=""permutation"")"
"0",""
"0","# elastic net: try four different values of alpha for ridge/lasso blending and four lambda values for coefficient penalty"
"0","my.elasticnet <- caretModelSpec(method=""glmnet"",tuneGrid=expand.grid(alpha=c(0,0.1,0.6,1), lambda=c(5^-5,5^-3,5^-1,1)))"
"0",""
"0","# Compile individual models into one cohesive model list using caretList"
"0","invisible(capture.output(ensemble.models <- caretList(CDRSB ~ ., "
"0","                                                      data=pca.train, "
"0","                                                      trControl=ensemble.control, "
"0","                                                      metric=""RMSE"", "
"0","                                                      preProcess=c(""center"", ""scale""),"
"0","                                                      tuneList=list(my.neuralnet, my.knn, my.randomforest, my.elasticnet))))"
"2","trControl$savePredictions not 'all' or 'final'.  Setting to 'final' so we can ensemble the models."
"2","indexes not defined in trControl.  Attempting to set them ourselves, so each model in the ensemble will have the same resampling indexes."
"2","There were missing values in resampled performance measures."
"2","There were missing values in resampled performance measures."

"0","ensemble.models$glmnet"
"1","glmnet"
"1"," "
"1","

"
"1","246"
"1",""
"1"," samples"
"1","
"
"1"," 33"
"1",""
"1"," predictor"
"1",""
"1","
"
"1","
"
"1","Pre-processing: centered (33), scaled (33)"
"1"," "
"1","
"
"1","Resampling:"
"1"," "
"1","Cross-Validated (10 fold)"
"1"," "
"1","
"
"1","Summary of sample sizes:"
"1"," "
"1","221, 222, 221, 222, 222, 221, ..."
"1"," "
"1","
"
"1","Resampling results"
"1"," across tuning parameters"
"1",":

"
"1",""
"1","  alpha"
"1","  lambda "
"1","  RMSE     "
"1","  Rsquared "
"1","  MAE      "
"1","
"
"1","  0.0  "
"1","  0.00032"
"1","  1.0024825"
"1","  0.2653441"
"1","  0.6913281"
"1","
"
"1","  0.0  "
"1","  0.00800"
"1","  1.0024825"
"1","  0.2653441"
"1","  0.6913281"
"1","
"
"1","  0.0  "
"1","  0.20000"
"1","  0.9898643"
"1","  0.2445495"
"1","  0.6370114"
"1","
"
"1","  0.0  "
"1","  1.00000"
"1","  1.0343083"
"1","  0.1746313"
"1","  0.6488788"
"1","
"
"1","  0.1  "
"1","  0.00032"
"1","  1.0272172"
"1","  0.2559091"
"1","  0.7255175"
"1","
"
"1","  0.1  "
"1","  0.00800"
"1","  1.0173454"
"1","  0.2591756"
"1","  0.7119920"
"1","
"
"1","  0.1  "
"1","  0.20000"
"1","  1.0054750"
"1","  0.2281684"
"1","  0.6327570"
"1","
"
"1","  0.1  "
"1","  1.00000"
"1","  1.0779697"
"1","  0.1152146"
"1","  0.6739505"
"1","
"
"1","  0.6  "
"1","  0.00032"
"1","  1.0276861"
"1","  0.2555838"
"1","  0.7261108"
"1","
"
"1","  0.6  "
"1","  0.00800"
"1","  1.0089328"
"1","  0.2615413"
"1","  0.6961165"
"1","
"
"1","  0.6  "
"1","  0.20000"
"1","  1.0846309"
"1","  0.1464500"
"1","  0.6735706"
"1","
"
"1","  0.6  "
"1","  1.00000"
"1","  1.0728707"
"1","        NaN"
"1","  0.6855987"
"1","
"
"1","  1.0  "
"1","  0.00032"
"1","  1.0279578"
"1","  0.2554543"
"1","  0.7261422"
"1","
"
"1","  1.0  "
"1","  0.00800"
"1","  1.0031054"
"1","  0.2639103"
"1","  0.6829836"
"1","
"
"1","  1.0  "
"1","  0.20000"
"1","  1.0795456"
"1","  0.0510474"
"1","  0.6794389"
"1","
"
"1","  1.0  "
"1","  1.00000"
"1","  1.0728707"
"1","        NaN"
"1","  0.6855987"
"1","
"
"1","
"
"1","RMSE was used to select the optimal model using the smallest value.
"
"1","The final values used for the model were alpha = 0 and lambda = 0.2."
"1","
"
"0","# Elastic net cross-validation plot"
"0","enet.alpha <- ensemble.models$glmnet$results$alpha"
"0","enet.rmse <- ensemble.models$glmnet$results$RMSE"
"0","enet.r2 <- ensemble.models$glmnet$results$Rsquared"
"0","enet.lambda <- ensemble.models$glmnet$results$lambda"
"0",""
"0","p.enet.cv <- data.frame(alpha=enet.alpha, RMSE=enet.rmse, R2=enet.r2, lambda=enet.lambda) %>%"
"0","  mutate(alpha=as.character(alpha)) %>%"
"0","  pivot_longer(cols=c(RMSE, R2), names_to=""Metric"", values_to=""Value"") %>%"
"0","  mutate(Metric = ifelse(Metric==""R2"", ""Model R-Squared"", ""Model RMSE"")) %>%"
"0","  ggplot(data=., mapping=aes(x=lambda, y=Value, color=alpha)) +"
"0","  facet_wrap(Metric ~ ., scales=""free"") +"
"0","  geom_point() +"
"0","  geom_line(aes(group=alpha)) +"
"0","  theme_minimal() +"
"0","  ggtitle(""Elastic Net Regression Cross-Validated Results"") +"
"0","  theme(plot.title=element_text(hjust=0.5),"
"0","        axis.title=element_blank(),"
"0","        panel.spacing = unit(2, ""lines""))"
"0",""
"0",""
"0","ggplotly(p.enet.cv) %>% "
"0","  layout(yaxis = list(title = ""R2"", "
"0","                      titlefont = list(size = 12)),"
"0","         xaxis = list(title = ""lambda"", "
"0","                      titlefont = list(size = 12)),"
"0","         yaxis2 = list(title = ""RMSE"", "
"0","                       titlefont = list(size = 12)),"
"0","         xaxis2 = list(title = ""lambda"", "
"0","                       titlefont = list(size = 12)),"
"0","         autosize = F, width = 900, height = 400)"
"2","Specifying width/height in layout() is now deprecated.
Please specify in ggplotly() or plot_ly()"

"0","# Print neural network model summary"
"0","ensemble.models$nnet"
"1","Neural Network"
"1"," "
"1","

"
"1","246"
"1",""
"1"," samples"
"1","
"
"1","  8"
"1",""
"1"," predictor"
"1",""
"1","
"
"1","
"
"1","Pre-processing: centered (8), scaled (8)"
"1"," "
"1","
"
"1","Resampling:"
"1"," "
"1","Cross-Validated (10 fold)"
"1"," "
"1","
"
"1","Summary of sample sizes:"
"1"," "
"1","221, 222, 221, 222, 222, 221, ..."
"1"," "
"1","
"
"1","Resampling results"
"1"," across tuning parameters"
"1",":

"
"1",""
"1","  size"
"1","  decay"
"1","  RMSE    "
"1","  Rsquared  "
"1","  MAE      "
"1","
"
"1","   1  "
"1","  0.0  "
"1","  1.137145"
"1","  0.18587462"
"1","  0.6745345"
"1","
"
"1","   1  "
"1","  0.2  "
"1","  1.166914"
"1","  0.08677497"
"1","  0.6957381"
"1","
"
"1","   1  "
"1","  0.4  "
"1","  1.145249"
"1","  0.11516855"
"1","  0.6803583"
"1","
"
"1","   1  "
"1","  0.6  "
"1","  1.141622"
"1","  0.11373942"
"1","  0.6863928"
"1","
"
"1","   1  "
"1","  0.8  "
"1","  1.131291"
"1","  0.10556359"
"1","  0.6841364"
"1","
"
"1","   1  "
"1","  1.0  "
"1","  1.109110"
"1","  0.13796414"
"1","  0.6697979"
"1","
"
"1","   3  "
"1","  0.0  "
"1","  1.360337"
"1","  0.13391533"
"1","  0.7493578"
"1","
"
"1","   3  "
"1","  0.2  "
"1","  1.204501"
"1","  0.18087596"
"1","  0.7117220"
"1","
"
"1","   3  "
"1","  0.4  "
"1","  1.178550"
"1","  0.09684637"
"1","  0.7070713"
"1","
"
"1","   3  "
"1","  0.6  "
"1","  1.160250"
"1","  0.09671037"
"1","  0.7494548"
"1","
"
"1","   3  "
"1","  0.8  "
"1","  1.078210"
"1","  0.14425410"
"1","  0.6932106"
"1","
"
"1","   3  "
"1","  1.0  "
"1","  1.096536"
"1","  0.11003415"
"1","  0.6933764"
"1","
"
"1","   5  "
"1","  0.0  "
"1","  1.730166"
"1","  0.04498411"
"1","  1.0131719"
"1","
"
"1","   5  "
"1","  0.2  "
"1","  1.362115"
"1","  0.08778452"
"1","  0.8465818"
"1","
"
"1","   5  "
"1","  0.4  "
"1","  1.266651"
"1","  0.13525359"
"1","  0.7854702"
"1","
"
"1","   5  "
"1","  0.6  "
"1","  1.234863"
"1","  0.08813590"
"1","  0.7742763"
"1","
"
"1","   5  "
"1","  0.8  "
"1","  1.210461"
"1","  0.11572990"
"1","  0.7550930"
"1","
"
"1","   5  "
"1","  1.0  "
"1","  1.175738"
"1","  0.13627307"
"1","  0.7203818"
"1","
"
"1","  10  "
"1","  0.0  "
"1","  1.604449"
"1","  0.12973149"
"1","  1.0260500"
"1","
"
"1","  10  "
"1","  0.2  "
"1","  1.320676"
"1","  0.10131454"
"1","  0.8688364"
"1","
"
"1","  10  "
"1","  0.4  "
"1","  1.299597"
"1","  0.08176040"
"1","  0.8236499"
"1","
"
"1","  10  "
"1","  0.6  "
"1","  1.241404"
"1","  0.07534238"
"1","  0.7867440"
"1","
"
"1","  10  "
"1","  0.8  "
"1","  1.227167"
"1","  0.08558072"
"1","  0.7619154"
"1","
"
"1","  10  "
"1","  1.0  "
"1","  1.171019"
"1","  0.13864524"
"1","  0.7135705"
"1","
"
"1","  15  "
"1","  0.0  "
"1","  1.614808"
"1","  0.14943997"
"1","  1.1097321"
"1","
"
"1","  15  "
"1","  0.2  "
"1","  1.273885"
"1","  0.05816738"
"1","  0.8647328"
"1","
"
"1","  15  "
"1","  0.4  "
"1","  1.224438"
"1","  0.10105074"
"1","  0.7781279"
"1","
"
"1","  15  "
"1","  0.6  "
"1","  1.231211"
"1","  0.11686062"
"1","  0.7640469"
"1","
"
"1","  15  "
"1","  0.8  "
"1","  1.230320"
"1","  0.07467180"
"1","  0.7660490"
"1","
"
"1","  15  "
"1","  1.0  "
"1","  1.156883"
"1","  0.12348715"
"1","  0.7147662"
"1","
"
"1","
"
"1","RMSE was used to select the optimal model using the smallest value.
"
"1","The final values used for the model were size = 3 and decay = 0.8."
"1","
"
"0","# Neural network cross-validation plot"
"0","n.neurons <- ensemble.models$nnet$results$size"
"0","nnet.rmse <- ensemble.models$nnet$results$RMSE"
"0","nnet.mae <- ensemble.models$nnet$results$MAE"
"0","nnet.weight <- ensemble.models$nnet$results$decay"
"0",""
"0","# Plot the RMSE and MAE in a facet plot using facet_wrap"
"0","p.nnet.cv <- data.frame(n.neurons, RMSE=nnet.rmse, MAE=nnet.mae, decay=nnet.weight) %>%"
"0","  mutate(decay=as.character(decay)) %>%"
"0","  pivot_longer(cols=c(RMSE, MAE), names_to=""Metric"", values_to=""Value"") %>%"
"0","  mutate(Metric = ifelse(Metric==""MAE"", ""Mean Absolute Error"", ""Root-Mean Square Error"")) %>%"
"0","  # One line per value of alpha"
"0","  ggplot(data=., mapping=aes(x=n.neurons, y=Value, color=decay)) +"
"0","  # Facet the MAE and RMSE in separate plots"
"0","  facet_wrap(Metric ~ ., scales=""free"") +"
"0","  geom_point() +"
"0","  geom_line(aes(group=decay)) +"
"0","  theme_minimal() +"
"0","  ggtitle(""Neural Network Regression Cross-Validated Results"") +"
"0","  theme(plot.title=element_text(hjust=0.5),"
"0","        axis.title=element_blank(),"
"0","        panel.spacing = unit(2, ""lines""))"
"0",""
"0","# Convert to interactive plotly"
"0","ggplotly(p.nnet.cv) %>% "
"0","  layout(yaxis = list(title = ""MAE"", "
"0","                      titlefont = list(size = 12)),"
"0","         xaxis = list(title = ""# Neurons in Hidden Layer"", "
"0","                      titlefont = list(size = 12)),"
"0","         yaxis2 = list(title = ""RMSE"", "
"0","                       titlefont = list(size = 12)),"
"0","         xaxis2 = list(title = ""# Neurons in Hidden Layer"", "
"0","                       titlefont = list(size = 12)),"
"0","         autosize = F, width = 900, height = 400)"

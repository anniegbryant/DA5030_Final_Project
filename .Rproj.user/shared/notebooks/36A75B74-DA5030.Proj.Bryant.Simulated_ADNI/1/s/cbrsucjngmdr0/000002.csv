"0","# plot the mean tau-PET SUVR for each region of interest"
"0","p_roi_suvr <- tau.df %>%"
"0","  # omit irrelevant variables"
"0","  select(-VISCODE, -VISCODE2) %>%"
"0","  group_by(RID) %>%"
"0","  mutate(n_scans=n()) %>%"
"0","  filter(n_scans>=2) %>%"
"0","  select(-n_scans) %>%"
"0","  # only look at SUVR columns; reshape wide --> long"
"0","  select(!matches(""VOLUME"")) %>%"
"0","  pivot_longer(cols=c(-RID, -EXAMDATE), names_to=""ROI"", values_to=""SUVR"") %>%"
"0","  mutate(ROI = tolower(str_replace(ROI, ""_SUVR"", """"))) %>%"
"0","  group_by(ROI) %>%"
"0","  # calculate mean and SD, along with ymin and ymax, to plot error bars for each ROI"
"0","  summarise(Mean_SUVR=mean(SUVR, na.rm=T),"
"0","            SD_SUVR = sd(SUVR, na.rm=T),"
"0","            ymin = Mean_SUVR-SD_SUVR,"
"0","            ymax = Mean_SUVR+SD_SUVR) %>%"
"0","  # fct_reorder --> arrange ROI by its average tau-PET SUVR"
"0","  ggplot(data=., mapping=aes(x=fct_reorder(ROI, Mean_SUVR, .desc=F), "
"0","                             y=Mean_SUVR,"
"0","                             label = ROI)) +"
"0","  geom_bar(stat=""identity"", show.legend=F, fill=""lightsteelblue"") +"
"0","  # Add error bars"
"0","  geom_errorbar(aes(ymin=ymin, ymax=ymax), width=0, color=""lightslategray"") +"
"0","  coord_flip() +"
"0","  theme_minimal() +"
"0","  ylab(""Mean Tau-PET SUVR"") +"
"0","  xlab(""Region of Interest"") +"
"0","  ggtitle(""Mean Tau-PET SUVR by ROI"") +"
"0","  theme(axis.text.x=element_text(size=8, angle=45))"
"2","`summarise()` ungrouping output (override with `.groups` argument)
"
"0","# Convert to interactive plotly graph"
"0","ggplotly(p_roi_suvr, height=1000, width=600, tooltip=c(""label"", ""y""))"
